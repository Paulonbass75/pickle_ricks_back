{{template "base" .}}

{{define "title"}}

Vitual Terminal
{{end}}

{{define "content"}}

<h1 class="text-center">Virtual Terminal</h1>

<hr>
<div class="alert alert-danger text-center d-none" id="card-messages"></div>

<form action="/payment-succeeded" method="post" name="charge_form" id="charge_form"
  class="d-block needs-validation charge-form" autocomplete="off" novalidate="">

  <div class="mb-3">
    <label for="amount" class="form-label">Amount</label>
    <input type="text" class="form-control" id="amount" name="amount" required="" autocomplete="amount-new">
  </div>

  <div class="mb-3">
    <label for="cardholder-name" class="form-label">Cardholder</label>
    <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required=""
      autocomplete="cardholder-name-new">
  </div>
  <div class="mb-3">
    <label for="cardholder-email" class="form-label">Email</label>
    <input type="email" class="form-control" id="cardholder-email" name="email" required=""
      autocomplete="cardholder-email-new">
  </div>

  <!-- card number built by stripe -->
  <div class="mb-3">
    <label for="card-element" class="form-label">Credit Card</label>
    <div class="form-control" id="card-element"></div>
    <div class="alert-danger text-center" id="card-errors" role="alert"></div>
    <div class="alert-success text-center" id="card-success" role="alert"></div>
  </div>

  <hr>

  <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>

  <div class="text-center d-none" id="processing-payment">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>

  <input type="hidden" name="payment_intent" id="payment_intent">
  <input type="hidden" name="payment_method" id="payment_method">
  <input type="hidden" name="payment_amount" id="payment_amount">
  <input type="hidden" name="payment_currency" id="payment_currency">

</form>





{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>

<script>
  let card;
  let stripe;
  const cardMessages = document.getElementById("card-messages");
  const payButton = document.getElementById("pay-button");
  const processing = document.getElementById("processing-payment");

  stripe = Stripe('pk_test_51ObramDQjpQrxGsC7KJuDzuCu08G6DD9XNpNpoFPd3AdrJiOoiIqkqP17vL9NF31fcU1PDHPgpua96jJB1EUcbBF00nymp22AS');

  function hidePayButton() {
    payButton.classList.add("d-none");
    processing.classList.remove("d-none");
  }
  function showPayButton() {
    payButton.classList.remove("d-none");
    processing.classList.add("d-none");
  }

  function showCardError(msg) {
    cardMessages.classList.add("alert-danger");
    cardMessages.classList.remove("alert-success");
    cardMessages.classList.remove("d-none");
    cardMessages.innertext = msg;

  }

  function showCardSuccess() {
    cardMessages.classList.remove("alert-danger");
    cardMessages.classList.add("alert-success");
    cardMessages.classList.remove("d-none");
    cardMessages.innertext = "Transaction Complete";

  }

  function val() {
    let form = document.getElementById("charge_form");
    if (form.checkValidity() === false) {
      this.event.preventDefault();
      this.event.stopPropagation();
      form.classList.add("was-validated");
      return
    }
    form.classList.add("was-validated");
    hidePayButton();

    let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100);

    let payload = {
      amount: amountToCharge,
      currency: "usd",
     // <!-- payment_method: card,
      //email: document.getElementById("cardholder-email").value,
      //cardholder: document.getElementById("cardholder-name").value -->
    };
    const requestOptions = {

      method: 'post',
      headers: {
        'Accept': 'application/json',
        'Content-type': 'application/json'
      },
      body: JSON.stringify(payload),
    };

    fetch("http://localhost:8081/api/payment-intent", requestOptions)
      .then(response => response.text())
      .then(response => {
        let data;
        try {
          data = JSON.parse(response);
          stripe.confirmCardPayment(data.client_secret, {
            payment_method: {
              card: card,
              billing_details: {
                name: document.getElementById("cardholder-name").value,

              }
            }

          }).then(function (result) {
            if (result.error) {
              // card declined, or something went wrong
              showCardError(result.error.message);
              showPayButton()
            } else if (result.paymentIntent) {
              if (result.paymentIntent.status === "succeeded") {
                // card accepted
                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
                document.getElementById("payment_intent").value = result.paymentIntent.id;
                document.getElementById("payment_amount").value = result.paymentIntent.amount;
                document.getElementById("payment_currency").value = result.paymentIntent.currency;
                processing.classList.add("d-none");
                showCardSuccess();
                //would submit form
                document.getElementById("charge_form").submit();

              };
            }
          })
        } catch (error) {
          console.log(error);
          showCardError("An error occurred, please try again");
          showPayButton();
        }

      })
  }





  (function () {
    const elements = stripe.elements();
    const style = {
      base: {
        fontsize: "16px",
        lineheight: "24px"
      }
    };
    card = elements.create('card', {
      style: style,
      hidePostalCode: false

    });
    card.mount("#card-element");
    //check for input errors
    card.addEventListener('change', function (event) {
      var displayError = document.getElementById("card-errors");
      if (event.error) {
        displayError.classList.remove('d-none');
        displayError.textContent = event.error.message;
      } else {
        displayError.classList.add('d-none');
        displayError.textContent = '';
      }
    });
  })();
</script>

{{end}}